{"ast":null,"code":"var _jsxFileName = \"/Users/hadrienmarchal/Desktop/Web3 Netflix/Netflix-Starter/src/pages/Player.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Icon } from 'web3uikit';\nimport \"./Player.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Player = () => {\n  _s();\n\n  const {\n    state: currentlyPlaying\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        controls: true,\n        className: \"videoPlayer\",\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: currentlyPlaying,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backHome\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"backButton\",\n            fill: \"rgba (255,255,255,0.25)\",\n            size: 60,\n            svg: \"arrowCircleLeft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(Player, \"pt2VhRR1zM04NRlTVl4GWnQtvpI=\", false, function () {\n  return [useLocation];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/hadrienmarchal/Desktop/Web3 Netflix/Netflix-Starter/src/pages/Player.js"],"names":["React","Link","useLocation","Icon","Player","state","currentlyPlaying"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAO,cAAP;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAACC,IAAAA,KAAK,EAAEC;AAAR,MAA4BJ,WAAW,EAA7C;AACA,sBACA;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,QAAQ,MAAxB;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAA,+BACE;AACE,UAAA,GAAG,EAAEI,gBADP;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAUA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACE,QAAC,IAAD;AACK,YAAA,SAAS,EAAC,YADf;AAEK,YAAA,IAAI,EAAC,yBAFV;AAGK,YAAA,IAAI,EAAE,EAHX;AAIK,YAAA,GAAG,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AA2BD,CA9BD;;GAAMF,M;UAE8BF,W;;;KAF9BE,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Icon } from 'web3uikit';\nimport \"./Player.css\";\n\nconst Player = () => {\n  \n  const {state: currentlyPlaying} = useLocation();\n  return (\n  <>\n  <div className='playerPage'>\n  <video autoPlay controls className=\"videoPlayer\">\n    <source\n      src={currentlyPlaying}\n      type=\"video/mp4\"\n    >\n\n    </source>\n  </video>\n  \n  <div className=\"backHome\">\n    <Link to=\"/\">\n      <Icon\n           className=\"backButton\"\n           fill=\"rgba (255,255,255,0.25)\"\n           size={60}\n           svg=\"arrowCircleLeft\"\n      />\n    </Link>\n\n  </div>\n  </div>\n\n  </>\n)\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}